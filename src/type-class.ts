export * as AbelianGroup from "./type-class/abelian-group.js";
export * as Adjunction from "./type-class/adjunction.js";
export * as Applicative from "./type-class/applicative.js";
export * as Apply from "./type-class/apply.js";
export * as Arrow from "./type-class/arrow.js";
export * as Associative from "./type-class/associative.js";
export * as Bifunctor from "./type-class/bifunctor.js";
export * as Category from "./type-class/category.js";
export * as Choice from "./type-class/choice.js";
export * as Comonad from "./type-class/comonad.js";
export * as Distributive from "./type-class/distributive.js";
export * as Endo from "./type-class/endo.js";
export * as Eq from "./type-class/eq.js";
export * as Field from "./type-class/field.js";
export * as FlatMap from "./type-class/flat-map.js";
export * as Foldable from "./type-class/foldable.js";
export * as Functor from "./type-class/functor.js";
export * as Group from "./type-class/group.js";
export * as HasInf from "./type-class/has-inf.js";
export * as HasNegInf from "./type-class/has-neg-inf.js";
export * as Iso from "./type-class/iso.js";
export * as Magma from "./type-class/magma.js";
export * as Monad from "./type-class/monad.js";
export * as Monoid from "./type-class/monoid.js";
export * as Monoidal from "./type-class/monoidal.js";
export * as Nt from "./type-class/nt.js";
export * as Ord from "./type-class/ord.js";
export * as PartialEq from "./type-class/partial-eq.js";
export * as PartialOrd from "./type-class/partial-ord.js";
export * as Profunctor from "./type-class/profunctor.js";
export * as Pure from "./type-class/pure.js";
export * as Reduce from "./type-class/reduce.js";
export * as Representable from "./type-class/representable.js";
export * as Ring from "./type-class/ring.js";
export * as SemiGroup from "./type-class/semi-group.js";
export * as SemiGroupal from "./type-class/semi-groupal.js";
export * as SemiGroupoid from "./type-class/semi-groupoid.js";
export * as Settable from "./type-class/settable.js";
export * as Strong from "./type-class/strong.js";
export * as Symmetric from "./type-class/symmetric.js";
export * as Tensor from "./type-class/tensor.js";
export * as Traversable from "./type-class/traversable.js";
export * as Unital from "./type-class/unital.js";
export * as Variance from "./type-class/variance.js";
